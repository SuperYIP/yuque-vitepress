import{_ as a,o as e,c as t,R as r}from"./chunks/framework.3LEfkZv-.js";const n="/assets/b765aa43f77fec12f4fc10253f8bba2b.h-h4Y1l2.png",q=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/react native/创建QRN项目.md","filePath":"docs/react native/创建QRN项目.md","lastUpdated":1702733641000}'),o={name:"docs/react native/创建QRN项目.md"},i=r('<blockquote><p>QRN wiki <a href="https://ued.qunar.com/qrn/start/start-project-init.html" target="_blank" rel="noreferrer">https://ued.qunar.com/qrn/start/start-project-init.html</a><a href="https://wiki.corp.qunar.com/confluence/display/~jinghuangh.huang/QRN" target="_blank" rel="noreferrer">https://wiki.corp.qunar.com/confluence/display/~jinghuangh.huang/QRN</a></p></blockquote><h3 id="所需工具" tabindex="-1">所需工具 <a class="header-anchor" href="#所需工具" aria-label="Permalink to &quot;所需工具&quot;">​</a></h3><h4 id="安装qrn" tabindex="-1">安装QRN <a class="header-anchor" href="#安装qrn" aria-label="Permalink to &quot;安装QRN&quot;">​</a></h4><p><code>npm install @qnpm/qrn-cli -g --registry=http://npmrepo.corp.qunar.com/ --unsafe-perm</code><br>安装qrn需要16.x版本的node，所以需要先：<code>nvm use 16</code><br>终端输入qrn出现各种功能命令则表示安装成功。</p><h4 id="安装watchman" tabindex="-1">安装watchman <a class="header-anchor" href="#安装watchman" aria-label="Permalink to &quot;安装watchman&quot;">​</a></h4><p>`brew install watchman```</p><h4 id="安装react-native-cli" tabindex="-1">安装react-native-cli <a class="header-anchor" href="#安装react-native-cli" aria-label="Permalink to &quot;安装react-native-cli&quot;">​</a></h4><p><code>brew install react-native-cli</code></p><h3 id="运行项目" tabindex="-1">运行项目 <a class="header-anchor" href="#运行项目" aria-label="Permalink to &quot;运行项目&quot;">​</a></h3><h4 id="初始化项目" tabindex="-1">初始化项目 <a class="header-anchor" href="#初始化项目" aria-label="Permalink to &quot;初始化项目&quot;">​</a></h4><p>打开终端，执行：<code>qrn init AwesomeProject</code><br>安装依赖：<code>qrn install</code>，后续需要的依赖包也用<code>qrn install</code>安装，使用npm貌似有些问题。</p><h4 id="启动react-native服务" tabindex="-1">启动react-native服务 <a class="header-anchor" href="#启动react-native服务" aria-label="Permalink to &quot;启动react-native服务&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AwesomeProject</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">qrn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span></span></code></pre></div><blockquote><p>注：这一步中，qrn项目AwesomeProject所在路径不能有中文，否则会报错。</p></blockquote><p>项目启动成功，会在终端生成一个二维码，供app扫描。<br>若启动别人项目后RN页面报错，原因可能是项目内使用的包版本较低。可以执行：<code>rm -rf node_modules</code>先删除原项目以来，然后执行<code>qrn clear</code>，重新<code>qrn install</code>，接着<code>qrn update</code>更新，最后启动项目：<code>qrn run</code>。n</p><h4 id="真机调试" tabindex="-1">真机调试 <a class="header-anchor" href="#真机调试" aria-label="Permalink to &quot;真机调试&quot;">​</a></h4><blockquote><p>qunar app手机debug包下载地址： <a href="http://md.corp.qunar.com/client_app/adr_llama_finn_app/appReleaseHistory" target="_blank" rel="noreferrer">http://md.corp.qunar.com/client_app/adr_llama_finn_app/appReleaseHistory</a></p></blockquote><h5 id="mac电脑开启热点" tabindex="-1">mac电脑开启热点 <a class="header-anchor" href="#mac电脑开启热点" aria-label="Permalink to &quot;mac电脑开启热点&quot;">​</a></h5><p>此步骤手机需要和电脑处于同一网络下，所以可以电脑开热点给手机连。<br>打开设置-&gt;搜索共享-&gt;点击互联网共享-&gt;共享来源是网线(电脑需要连接着有线)，共享方式是wifi<br><img src="'+n+'" alt="image.png"></p><h5 id="rn调试" tabindex="-1">RN调试 <a class="header-anchor" href="#rn调试" aria-label="Permalink to &quot;RN调试&quot;">​</a></h5><p>打开App点击悬浮球，然后点击扫一扫，扫描在电脑启动项目时终端生成的二维码。再次点击悬浮球，点击小齿轮按钮，点击QRN调试，然后点击打开RN页面即可看到项目创建的页面。</p><blockquote><p>QRN调试中点击Local Server，有Debug In The Chrome 和 Debug Mode等4个选项可以勾选。通常只勾选前2个中的一个，勾选Debug Mode可以实现热更新。</p></blockquote><blockquote><p>注：手机和开发的电脑需连接同一个公司无线wifi或手机直接连接由开发电脑发射的wifi</p></blockquote>',23),c=[i];function l(s,h,p,d,u,m){return e(),t("div",null,c)}const _=a(o,[["render",l]]);export{q as __pageData,_ as default};
