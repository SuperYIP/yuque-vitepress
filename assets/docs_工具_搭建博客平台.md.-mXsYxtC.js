import{_ as e,o as t,c as r,R as a}from"./chunks/framework.3LEfkZv-.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/工具/搭建博客平台.md","filePath":"docs/工具/搭建博客平台.md","lastUpdated":1702876176000}'),s={name:"docs/工具/搭建博客平台.md"},o=a('<blockquote><p>文档同步工具elog：<a href="https://github.com/LetTTGACO/elog" target="_blank" rel="noreferrer">https://github.com/LetTTGACO/elog</a> elog+语雀+vitePress+Vercel搭建博客平台方案：<a href="https://github.com/elog-x/yuque-vitepress" target="_blank" rel="noreferrer">https://github.com/elog-x/yuque-vitepress</a> serverless-api: <a href="https://github.com/elog-x/serverless-api" target="_blank" rel="noreferrer">https://github.com/elog-x/serverless-api</a>(访问其提供的链接，直接执行github Actions) vitePress框架：<a href="https://vitepress.qzxdp.cn/guide/deploy.html" target="_blank" rel="noreferrer">https://vitepress.qzxdp.cn/guide/deploy.html</a> netlify平台：<a href="https://app.netlify.com/teams/superyip/overview" target="_blank" rel="noreferrer">https://app.netlify.com/teams/superyip/overview</a> vercel平台：<a href="https://vercel.com/yihaidis-projects" target="_blank" rel="noreferrer">https://vercel.com/yihaidis-projects</a> （国内有点问题，部署后的项目链接打不开） 搭建过程中的参考： github Actions自动编译master分支到一个新分支：<a href="https://juejin.cn/post/7213548316981526586" target="_blank" rel="noreferrer">https://juejin.cn/post/7213548316981526586</a>，<a href="https://juejin.cn/post/6844903830568583176" target="_blank" rel="noreferrer">https://juejin.cn/post/6844903830568583176</a></p></blockquote><blockquote><p>环境：node（v20.10.0），</p></blockquote><h3 id="方案原理" tabindex="-1">方案原理 <a class="header-anchor" href="#方案原理" aria-label="Permalink to &quot;方案原理&quot;">​</a></h3><ol><li>通过elog将自己语雀上的文章拉取到本地，放到vitePress框架搭建的博客平台内。（到这一步本地启动vitePress就已经有博客网站的样子和内容了，只不过还没有部署到线上）</li><li>讲vitePress代码push到github中。通过github Actions流水线，在将代码push到github过程中把vitePress编译打包，打包后的产物会单独生成一个分支。</li><li>将vitePress编译打包后的产物部署到netlify平台，部署时需要选择打包后产物的那个分支。</li></ol><p>以后在语雀中写好文章后，想要同步到自己的在线博客平台的话，在本地的vitePress工程下执行<code>npm run elog:sync-local</code>拉取语雀代码，然后正常提交代码的github即可。netlify会自动检测github仓库代码是否有变动，有就会自动部署，十分智能。</p><h3 id="手动触发-github-actions流水线" tabindex="-1">手动触发 Github Actions流水线 <a class="header-anchor" href="#手动触发-github-actions流水线" aria-label="Permalink to &quot;手动触发 Github Actions流水线&quot;">​</a></h3><p>在浏览器中访问即可(目前没有成功，不知道为啥)：<a href="https://serverless-api-elog.vercel.app/api/github?user=SuperYIP&amp;repo=yuque-vitepress&amp;event_type=deploy&amp;token=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" target="_blank" rel="noreferrer">https://serverless-api-elog.vercel.app/api/github?user=SuperYIP&amp;repo=yuque-vitepress&amp;event_type=deploy&amp;token=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</a></p><h3 id="我的博客地址" tabindex="-1">我的博客地址 <a class="header-anchor" href="#我的博客地址" aria-label="Permalink to &quot;我的博客地址&quot;">​</a></h3><p><a href="https://gh-pages--thunderous-brioche-b12b46.netlify.app/" target="_blank" rel="noreferrer">https://gh-pages--thunderous-brioche-b12b46.netlify.app/</a></p>',9),i=[o];function p(l,h,n,c,u,g){return t(),r("div",null,i)}const d=e(s,[["render",p]]);export{_ as __pageData,d as default};
