import{_ as e,o as a,c as o,R as t}from"./chunks/framework.3LEfkZv-.js";const r="/assets/9387b83f584a887c5e1a8303af7bd6c1.w0LjUpw8.png",b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/工具/vscode相关.md","filePath":"docs/工具/vscode相关.md","lastUpdated":1702733641000}'),i={name:"docs/工具/vscode相关.md"},l=t('<h2 id="插件" tabindex="-1">插件 <a class="header-anchor" href="#插件" aria-label="Permalink to &quot;插件&quot;">​</a></h2><h3 id="live-server插件" tabindex="-1">Live Server插件 <a class="header-anchor" href="#live-server插件" aria-label="Permalink to &quot;Live Server插件&quot;">​</a></h3><p>该插件可以作为一个小型服务器，实时查看所开发网页或项目的效果。（在VSCode按ctrl+s保存后，浏览器页面就会刷新）</p><h3 id="用vscode编辑html中的scrip标签内容时-无法识别是js代码-使用快捷键注释添加的还是html的注释-。解决方式是禁用-jinja插件-此时js注释恢复为" tabindex="-1">用VSCode编辑html中的scrip标签内容时，无法识别是js代码，使用快捷键注释添加的还是html的注释：<code>&lt;!-- --&gt;</code>。解决方式是禁用 <code>Jinja</code>插件，此时js注释恢复为 <code>//</code> <a class="header-anchor" href="#用vscode编辑html中的scrip标签内容时-无法识别是js代码-使用快捷键注释添加的还是html的注释-。解决方式是禁用-jinja插件-此时js注释恢复为" aria-label="Permalink to &quot;用VSCode编辑html中的scrip标签内容时，无法识别是js代码，使用快捷键注释添加的还是html的注释：`&lt;!-- --&gt;`。解决方式是禁用 `Jinja`插件，此时js注释恢复为 `//`&quot;">​</a></h3><h3 id="error-lens插件-可以在代码编辑页面展示报错信息" tabindex="-1">Error Lens插件：可以在代码编辑页面展示报错信息 <a class="header-anchor" href="#error-lens插件-可以在代码编辑页面展示报错信息" aria-label="Permalink to &quot;Error Lens插件：可以在代码编辑页面展示报错信息&quot;">​</a></h3><h3 id="copy-relative-path-and-line-numbers插件" tabindex="-1">Copy Relative Path and Line Numbers插件 <a class="header-anchor" href="#copy-relative-path-and-line-numbers插件" aria-label="Permalink to &quot;Copy Relative Path and Line Numbers插件&quot;">​</a></h3><p><code>ctrl+l</code>可以复制光标所在行的代码的路径，复制内容如下：<code>node_modules/@qnpm/flight-module-search/src/ota/otaPage/views/vendorItem/vendorCard/index.tsx:85</code></p><h3 id="quick-create-log插件-快速生成console-log-的插件" tabindex="-1">Quick create log插件：快速生成console.log()的插件 <a class="header-anchor" href="#quick-create-log插件-快速生成console-log-的插件" aria-label="Permalink to &quot;Quick create log插件：快速生成console.log()的插件&quot;">​</a></h3><p>光标选中需要输出的变量，按快捷键：<code>command + shift + l</code>快速生成log。</p><h2 id="vscode软件使用" tabindex="-1">VSCode软件使用 <a class="header-anchor" href="#vscode软件使用" aria-label="Permalink to &quot;VSCode软件使用&quot;">​</a></h2><h3 id="ctrl-shift-f-左侧边栏搜索按钮-在当前项目目录下搜索所有相关文本。" tabindex="-1">Ctrl + Shift + F（左侧边栏搜索按钮）：在当前项目目录下搜索所有相关文本。 <a class="header-anchor" href="#ctrl-shift-f-左侧边栏搜索按钮-在当前项目目录下搜索所有相关文本。" aria-label="Permalink to &quot;Ctrl + Shift + F（左侧边栏搜索按钮）：在当前项目目录下搜索所有相关文本。&quot;">​</a></h3><h3 id="设置vscode启动时打开上次编辑的项目-设置-用户-工作台-编辑管理-reveal-if-open-勾选" tabindex="-1">设置vscode启动时打开上次编辑的项目：设置-&gt;用户-&gt;工作台-&gt;编辑管理-&gt;Reveal If Open(勾选) <a class="header-anchor" href="#设置vscode启动时打开上次编辑的项目-设置-用户-工作台-编辑管理-reveal-if-open-勾选" aria-label="Permalink to &quot;设置vscode启动时打开上次编辑的项目：设置-&gt;用户-&gt;工作台-&gt;编辑管理-&gt;Reveal If Open(勾选)&quot;">​</a></h3><h3 id="格式化代码快捷键" tabindex="-1">格式化代码快捷键： <a class="header-anchor" href="#格式化代码快捷键" aria-label="Permalink to &quot;格式化代码快捷键：&quot;">​</a></h3><h4 id="win-shifr-alt-f-mac-shift-option-f。-最好把保存时自动格式化代码关掉-不然在code-diff的时候会有很多不是你修改的文件由于格式化代码也被diff" tabindex="-1">win：<code>shifr+alt+f</code>，mac：<code>shift + option + f</code>。（最好把保存时自动格式化代码关掉，不然在code diff的时候会有很多不是你修改的文件由于格式化代码也被diff） <a class="header-anchor" href="#win-shifr-alt-f-mac-shift-option-f。-最好把保存时自动格式化代码关掉-不然在code-diff的时候会有很多不是你修改的文件由于格式化代码也被diff" aria-label="Permalink to &quot;win：`shifr+alt+f`，mac：`shift + option + f`。（最好把保存时自动格式化代码关掉，不然在code diff的时候会有很多不是你修改的文件由于格式化代码也被diff）&quot;">​</a></h4><h4 id="mac只格式化选中代码-shift-option-command-f-我修改过的" tabindex="-1">mac只格式化选中代码：<code>shift + option + command + f</code>(我修改过的) <a class="header-anchor" href="#mac只格式化选中代码-shift-option-command-f-我修改过的" aria-label="Permalink to &quot;mac只格式化选中代码：`shift + option + command + f`(我修改过的)&quot;">​</a></h4><h4 id="自动保存时格式化-也可以设置只格式化修改部分-而不是全部文件。" tabindex="-1">自动保存时格式化，也可以设置只格式化修改部分，而不是全部文件。 <a class="header-anchor" href="#自动保存时格式化-也可以设置只格式化修改部分-而不是全部文件。" aria-label="Permalink to &quot;自动保存时格式化，也可以设置只格式化修改部分，而不是全部文件。&quot;">​</a></h4><p><img src="'+r+'" alt="image.png"></p><ul><li><br></li></ul><h2 id="写代码" tabindex="-1">写代码 <a class="header-anchor" href="#写代码" aria-label="Permalink to &quot;写代码&quot;">​</a></h2><h3 id="在-html文件中输入-可以直接生成一个html页面的框架" tabindex="-1">在.html文件中输入！可以直接生成一个html页面的框架 <a class="header-anchor" href="#在-html文件中输入-可以直接生成一个html页面的框架" aria-label="Permalink to &quot;在.html文件中输入！可以直接生成一个html页面的框架&quot;">​</a></h3>',20),c=[l];function d(h,s,n,f,m,p){return a(),o("div",null,c)}const q=e(i,[["render",d]]);export{b as __pageData,q as default};
