import{_ as s,a as i}from"./chunks/0d0221cf939842544f9c5b6c8dae0109.CVJlQOSm.js";import{_ as a,c as n,o as h,U as t}from"./chunks/framework.fNqm3e01.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/python/环境相关问题.md","filePath":"docs/python/环境相关问题.md","lastUpdated":1704357645000}'),p={name:"docs/python/环境相关问题.md"},l=t(`<h3 id="mac中有多个python3版本-指定使用哪个版本运行python文件" tabindex="-1">mac中有多个python3版本，指定使用哪个版本运行python文件 <a class="header-anchor" href="#mac中有多个python3版本-指定使用哪个版本运行python文件" aria-label="Permalink to &quot;mac中有多个python3版本，指定使用哪个版本运行python文件&quot;">​</a></h3><h4 id="通过在终端指定python3版本区分" tabindex="-1">通过在终端指定python3版本区分 <a class="header-anchor" href="#通过在终端指定python3版本区分" aria-label="Permalink to &quot;通过在终端指定python3版本区分&quot;">​</a></h4><p>比如有python3.9和python3.11两个版本的python。<br><code>python3.9 文件名.py</code>则使用3.9版本运行；<code>python3.11 文件名.py</code>则使用3.11版本运行。</p><blockquote><p>不直接卸载其中一个版本python的原因是有其他裤对其有依赖关系，卸载时提示：Refusing to uninstall /opt/homebrew/Cellar/python@3.11/3.11.5 because it is required by watchman</p></blockquote><h4 id="通过配置环境变量区分-修改-bash-profile文件-文件所在路径-bash-profile" tabindex="-1">通过配置环境变量区分：修改.bash_profile文件，文件所在路径：~/.bash_profile <a class="header-anchor" href="#通过配置环境变量区分-修改-bash-profile文件-文件所在路径-bash-profile" aria-label="Permalink to &quot;通过配置环境变量区分：修改.bash_profile文件，文件所在路径：~/.bash_profile&quot;">​</a></h4><p>打开.bash_profile文件：<code>open ~/.bash_profile</code>，在文件最下方增加<code>alias python3=&#39;/opt/homebrew/bin/python3.9&#39;</code>。<br>alias：这个命令告诉操作系统你要创建一个别名。<br>python3：别名的名称。<br>&#39;/opt/homebrew/bin/python3.9&#39;：给别名python3指定的值，当输入python3时系统应该执行的命令路径。<br>我把python和python3命令都指向了python3.9。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/homebrew/opt/nvm/nvm.sh</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-1.8.jdk/Contents/Home</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SDKMAN_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.sdkman&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.sdkman/bin/sdkman-init.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]] &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.sdkman/bin/sdkman-init.sh&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JAVA8_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Library/Java/JavaVirtualMachines/jdk-1.8.jdk/Contents/Home</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JAVA11_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#快速在命令行切换jdk版本命令</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jdk8</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;export JAVA_HOME=$JAVA8_HOME&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jdk11</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;export JAVA_HOME=$JAVA11_HOME&#39;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#default java11</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JAVA_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$JAVA11_HOME</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#设置Android相关环境变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ANDROID_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">~/android-sdks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ANDROID_HOME_TOOLS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${ANDROID_HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/platform-tools</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ANDROID_TOOLS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${ANDROID_HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/tools:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${ANDROID_HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/build-tools/33.0.0:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${ANDROID_HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/cmdline-tools/latest/bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ANDROID_NDK_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${ANDROID_HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/ndk-bundle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#设置Gradle相关环境变量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GRADLE_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">~/.sdkman/candidates/gradle/current/bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${PATH}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${ANDROID_HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${ANDROID_HOME_TOOLS}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${ANDROID_TOOLS}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${GRADLE_HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${ANDROID_NDK_HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/toolchains/aarch64-linux-android-4.9/prebuilt/darwin-x86_64/bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#设置默认的python版本</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> python3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/opt/homebrew/bin/python3.9&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> python</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/opt/homebrew/bin/python3.9&#39;</span></span></code></pre></div><p>修改.bash_profile文件后，在终端执行<code>source ~/.bash_profile</code>命令使修改生效，但是此时生效只是在当前终端生效，脱离此终端配置是没有生效的。想要让<code>.bash_profile</code>文件的配置全局生效，可以打开<code>.zshrc</code>文件：<code>open ~/.zshrc</code>，在文件末尾添加命令：<code>source ~/.bash_profile</code>，添加后.zshrc文件如下：（这样每次打开终端都会执行一次source ~/.bash_profile命令）</p><blockquote><p>参考： <a href="https://blog.csdn.net/lanlangaogao/article/details/118928478" target="_blank" rel="noreferrer">https://blog.csdn.net/lanlangaogao/article/details/118928478</a></p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.nvm&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/opt/homebrew/opt/nvm/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/opt/homebrew/opt/nvm/nvm.sh&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # This loads nvm</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # This loads nvm bash_completion</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SDKMAN_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.sdkman&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.sdkman/bin/sdkman-init.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]] &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.sdkman/bin/sdkman-init.sh&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使.bash_profile全局生效</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bash_profile</span></span></code></pre></div><h3 id="安装tkinter库-brew-install-python-tk-3-9" tabindex="-1">安装tkinter库：brew install python-tk@3.9 <a class="header-anchor" href="#安装tkinter库-brew-install-python-tk-3-9" aria-label="Permalink to &quot;安装tkinter库：brew install python-tk@3.9&quot;">​</a></h3><blockquote><p>安装这个库的原因是启动项目的过程中报错：If this fails your Python may not be configured for Tk<br>ImportError: No <a href="https://so.csdn.net/so/search?q=module&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">module</a> named _tkinter 参考：<a href="https://blog.csdn.net/blueheart20/article/details/78763208" target="_blank" rel="noreferrer">https://blog.csdn.net/blueheart20/article/details/78763208</a></p></blockquote><p>终端执行：<code>brew install python-tk@3.9</code></p><h3 id="mac查看python的安装路径命令-which-python3" tabindex="-1">mac查看python的安装路径命令：which python3 <a class="header-anchor" href="#mac查看python的安装路径命令-which-python3" aria-label="Permalink to &quot;mac查看python的安装路径命令：which python3&quot;">​</a></h3><p><img src="`+s+'" alt="image.png"><br>但是此命令查看的是当前指定的默认python3版本的安装路径，如果电脑中存在多个python3版本(如同时存在python3.9和python3.11两个版本)，此命令依然只能展示默认使用的python3版本的安装路径。</p><h3 id="mac通过homebrew查看电脑中存在的所有python版本-brew-list命令" tabindex="-1">mac通过homebrew查看电脑中存在的所有python版本：<code>brew list</code>命令 <a class="header-anchor" href="#mac通过homebrew查看电脑中存在的所有python版本-brew-list命令" aria-label="Permalink to &quot;mac通过homebrew查看电脑中存在的所有python版本：`brew list`命令&quot;">​</a></h3><p><code>brew list</code>命令可以查看mac安装的所有第三方库，其中就包括了python。<br><img src="'+i+'" alt="image.png"></p>',17),k=[l];function e(r,o,E,d,y,g){return h(),n("div",null,k)}const A=a(p,[["render",e]]);export{b as __pageData,A as default};
