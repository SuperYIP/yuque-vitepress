import{_ as a}from"./chunks/f0ac782f13610580beac3ea6ffdd757a.Gck7ku5y.js";import{_ as s,o as n,c as e,R as p}from"./chunks/framework.3LEfkZv-.js";const t="/assets/1ae3002b6f6e6bab0c72eb1b3fc2bd9b.hiwyV-fH.png",_=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Qunar环境使用/Rock项目启动.md","filePath":"docs/Qunar环境使用/Rock项目启动.md","lastUpdated":1702733641000}'),i={name:"docs/Qunar环境使用/Rock项目启动.md"},l=p(`<blockquote><p>这篇文档中启动的是QFC外推系统项目，pc端。</p></blockquote><h3 id="_1-clone-项目" tabindex="-1">1. Clone 项目 <a class="header-anchor" href="#_1-clone-项目" aria-label="Permalink to &quot;1. Clone 项目&quot;">​</a></h3><p>首先clone rock-client和 rock-public-pkgs项目，最好放在一个文件夹下。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git clone git@gitlab.corp.qunar.com:fe/rock-client.git</span></span>
<span class="line"><span>git clone git@gitlab.corp.qunar.com:qnpm/rock-public-pkgs.git</span></span></code></pre></div><h3 id="_2-安装相关依赖" tabindex="-1">2.安装相关依赖 <a class="header-anchor" href="#_2-安装相关依赖" aria-label="Permalink to &quot;2.安装相关依赖&quot;">​</a></h3><h4 id="切换node版本" tabindex="-1">切换node版本 <a class="header-anchor" href="#切换node版本" aria-label="Permalink to &quot;切换node版本&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># node 版本需要 &gt;=10</span></span>
<span class="line"><span>nvm install 10</span></span>
<span class="line"><span>nvm use 10</span></span></code></pre></div><p>我使用的node版本是14.20.1，也是可以的</p><h4 id="安装依赖-yikt3、-hiproxy、-rock" tabindex="-1">安装依赖：yikt3、 hiproxy、 rock <a class="header-anchor" href="#安装依赖-yikt3、-hiproxy、-rock" aria-label="Permalink to &quot;安装依赖：yikt3、 hiproxy、 rock&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 安装 ykit3</span></span>
<span class="line"><span>npm i @qnpm/ykit3-cli@0.0.54 -g</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 安装 hiproxy</span></span>
<span class="line"><span>npm install hiproxy -g</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 安装 rock</span></span>
<span class="line"><span>npm install -g @qnpm/rock-cli</span></span></code></pre></div><h3 id="_3-运行项目" tabindex="-1">3.运行项目 <a class="header-anchor" href="#_3-运行项目" aria-label="Permalink to &quot;3.运行项目&quot;">​</a></h3><p>此时目录结构应为：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># 存放项目代码的文件夹 rock-dir</span></span>
<span class="line"><span>-  rock-dir </span></span>
<span class="line"><span>|- rock-client</span></span>
<span class="line"><span>|- rock-public-pkgs</span></span></code></pre></div><p>首先在文件夹 rock-dir 下执行命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>rock sync ./rock-client ./rock-public-pkgs</span></span></code></pre></div><p>新建终端，进入 rock-client 执行</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm install</span></span>
<span class="line"><span>npm run server</span></span></code></pre></div><p>再新建终端，进入 rock-client执行 ：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>hiproxy start --open</span></span></code></pre></div><p>之后会弹出浏览器 hiproxy 页面，在此浏览器新建标签页，输入项目链接。项目链接：<a href="https://talent.qunar.com/" target="_blank" rel="noreferrer">https://talent.qunar.com/</a><br>链接复制到<code>hiproxy</code>弹出的浏览器后，页面可能为空(没有渲染出来)，需要打开控制台：Network-&gt;双击打开红框处链接，打开这个链接后回来此页面刷新，页面内容就可以显示。<br><img src="`+a+'" alt="image.png"></p><h3 id="使用charles代理-不使用hiproxy了" tabindex="-1">使用Charles代理，不使用hiproxy了 <a class="header-anchor" href="#使用charles代理-不使用hiproxy了" aria-label="Permalink to &quot;使用Charles代理，不使用hiproxy了&quot;">​</a></h3><p>Charles代理配置如下：<br><img src="'+t+'" alt="image.png"><br>使用Charles代理后，在rock-client文件夹下执行npm run server后，直接在浏览器打开项目链接：<a href="https://talent.qunar.com/" target="_blank" rel="noreferrer">https://talent.qunar.com/</a>即可。</p>',22),o=[l];function c(r,h,d,u,g,k){return n(),e("div",null,o)}const v=s(i,[["render",c]]);export{_ as __pageData,v as default};
