import{_ as a,o as e,c as s,R as n}from"./chunks/framework.3LEfkZv-.js";const t="/assets/9e4eb677085dc5c28d698009ebe17fa8.bKlP4mYO.png",o="/assets/f2d033144681d618bf39e84ed414a4a4.2vQRQoAP.png",p="/assets/717bc67fa54e1f655d222903f17f52c0.YidcPS_7.png",g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/Qunar环境使用/本地IDE SSH连接云开发.md","filePath":"docs/Qunar环境使用/本地IDE SSH连接云开发.md","lastUpdated":1702734795000}'),i={name:"docs/Qunar环境使用/本地IDE SSH连接云开发.md"},l=n('<h3 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h3><p>本地IDE连接云开发环境，就是最近比较流行的 Remote Development 远程开发模式，即使用用户本地的IDE，配合远程开发的扩展插件，远程连接云开发环境 进行开发，预览，调试的开发模式。</p><ul><li>本地IDE：目前本地IDE只支持使用 vscode</li><li>远程开发插件：vscode Remote Development插件（<a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack" target="_blank" rel="noreferrer">介绍</a>），主要使用其中的 Remote - SSH 插件</li><li>云开发环境：指通过云开发管理平台创建的WebIDE开发环境，是运行在k8s环境中的容器，除了可使用本地IDE SSH连接模式，也支持浏览器模式访问</li></ul><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>为了可以免密登录云开发环境，需要提前上传本地的SSH公钥和私钥：大前端统一平台 → 云开发 → 个人信息，粘贴本地的SSH公钥和私钥(gitlab的)，并保存。</p><h4 id="查看本地ssh密钥" tabindex="-1">查看本地SSH密钥 <a class="header-anchor" href="#查看本地ssh密钥" aria-label="Permalink to &quot;查看本地SSH密钥&quot;">​</a></h4><p>终端执行：<code>cd ~/.ssh</code>进入密钥存放的路径。该路径下：<code>id_rsa</code>和<code>id_rsa.pub</code>分别是gitlab的私钥和公钥。<br>mac复制文件内容命令：<code>pbcopy &lt; id_rsa</code>。使用该命令复制<code>id_rsa</code>文件中的内容粘贴到：大前端统一平台 → 云开发 → 个人信息。</p><h3 id="本地ide远程连接云开发环境" tabindex="-1">本地IDE远程连接云开发环境 <a class="header-anchor" href="#本地ide远程连接云开发环境" aria-label="Permalink to &quot;本地IDE远程连接云开发环境&quot;">​</a></h3><h4 id="vscode安装插件-remote-development" tabindex="-1">vscode安装插件：Remote Development <a class="header-anchor" href="#vscode安装插件-remote-development" aria-label="Permalink to &quot;vscode安装插件：Remote Development&quot;">​</a></h4><p>（Remote Development 是包含 Remote-SSH、Remote-Containers、Remote-WSL 3部分的一个组合，我们只需要使用 Remote-SSH）<br>安装成后，本地IDE左侧会多处一项，后续需要使用 “SSH” 下拉选项。<br><img src="'+t+'" alt="image.png"></p><h4 id="复制ssh配置" tabindex="-1">复制SSH配置 <a class="header-anchor" href="#复制ssh配置" aria-label="Permalink to &quot;复制SSH配置&quot;">​</a></h4><p>大前端统一平台 → 云开发 → 云开发列表：右侧操作处点击复制SSH配置</p><h4 id="连接远程开发环境" tabindex="-1">连接远程开发环境 <a class="header-anchor" href="#连接远程开发环境" aria-label="Permalink to &quot;连接远程开发环境&quot;">​</a></h4><p>打开本地vscode，Remote Development插件左侧菜单，下拉选择“SSH”，点击 齿轮按钮，配置远程SSH信息<br><img src="'+o+`" alt="image.png"></p><p>此时会弹出config文件，将复制的SSH配置追加到此文件中。<br>复制的SSH配置内容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Host haidi.yi-0i2ql6l2</span></span>
<span class="line"><span>  HostName 10.69.51.57</span></span>
<span class="line"><span>  User root</span></span>
<span class="line"><span>  PreferredAuthentications publickey</span></span>
<span class="line"><span>  IdentityFile ~/.ssh/id_rsa</span></span>
<span class="line"><span>  StrictHostKeyChecking no</span></span>
<span class="line"><span>  UserKnownHostsFile /dev/null</span></span></code></pre></div><p>追加SSH配置后的config文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>Host *</span></span>
<span class="line"><span>HostkeyAlgorithms +ssh-rsa</span></span>
<span class="line"><span>PubkeyAcceptedKeyTypes +ssh-rsa</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Host haidi.yi-0i2ql6l2</span></span>
<span class="line"><span>  HostName 10.69.51.57</span></span>
<span class="line"><span>  User root</span></span>
<span class="line"><span>  PreferredAuthentications publickey</span></span>
<span class="line"><span>  IdentityFile ~/.ssh/id_rsa</span></span>
<span class="line"><span>  StrictHostKeyChecking no</span></span>
<span class="line"><span>  UserKnownHostsFile /dev/null</span></span></code></pre></div><p>此时，SSH下会出现远程仓库的名字，点击右侧的文件夹图标即可打开远程仓库。</p><h4 id="" tabindex="-1"><img src="`+p+'" alt="image.png"><br><br> <a class="header-anchor" href="#" aria-label="Permalink to &quot;![image.png](../../images/717bc67fa54e1f655d222903f17f52c0.png)&lt;br /&gt;&lt;br /&gt;&quot;">​</a></h4>',20),c=[l];function r(d,h,m,S,_,b){return e(),s("div",null,c)}const f=a(i,[["render",r]]);export{g as __pageData,f as default};
