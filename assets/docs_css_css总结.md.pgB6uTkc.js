import{_ as s,o as a,c as i,R as e}from"./chunks/framework.3LEfkZv-.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/css/css总结.md","filePath":"docs/css/css总结.md","lastUpdated":1702735300000}'),t={name:"docs/css/css总结.md"},n=e(`<h2 id="一-工具、库等" tabindex="-1">一. 工具、库等 <a class="header-anchor" href="#一-工具、库等" aria-label="Permalink to &quot;一. 工具、库等&quot;">​</a></h2><h3 id="使用reset-css库清除浏览器默认样式" tabindex="-1">使用<code>reset-css</code>库清除浏览器默认样式 <a class="header-anchor" href="#使用reset-css库清除浏览器默认样式" aria-label="Permalink to &quot;使用\`reset-css\`库清除浏览器默认样式&quot;">​</a></h3><p>作用是消除不同浏览器之间对HTML元素的默认样式差异，以确保在不同浏览器上获得一致的外观和行为。<br>通常将reset-css库全局引入（react是放在最根上的那个index.js文件中）</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 初始化样式一般放在最前面，然后是UI框架的样式，然后是组件的样式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;reset-css&#39;</span></span></code></pre></div><h3 id="使用scss语法" tabindex="-1">使用scss语法 <a class="header-anchor" href="#使用scss语法" aria-label="Permalink to &quot;使用scss语法&quot;">​</a></h3><p>安装sass库(安装在开发环境：--save-dev)</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dev sass</span></span></code></pre></div><h3 id="常用初始样式" tabindex="-1">常用初始样式 <a class="header-anchor" href="#常用初始样式" aria-label="Permalink to &quot;常用初始样式&quot;">​</a></h3><p>首先是要使用<code>reset-css</code>库清除默认样式。<br>然后可以定义一个<code>global.css</code>用于指定全局样式。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  // 禁用文字选中</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  user-select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  // 禁止拖动图片</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -webkit-user-drag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">none</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="二-语法等" tabindex="-1">二. 语法等 <a class="header-anchor" href="#二-语法等" aria-label="Permalink to &quot;二. 语法等&quot;">​</a></h2>`,11),l=[n];function h(p,c,r,d,k,o){return a(),i("div",null,l)}const u=s(t,[["render",h]]);export{g as __pageData,u as default};
