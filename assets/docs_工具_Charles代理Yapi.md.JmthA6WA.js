import{_ as a,o as e,c as t,R as o}from"./chunks/framework.3LEfkZv-.js";const r="/assets/ed954a38b3b89a3b2d9e276110d98718.E78YfrE3.png",s="/assets/2b4ddbe42efcf700f2293b8bb2b717c6.ANxXJt5X.png",c="/assets/afc4544417558f4911c31afe6d5065bb.NrVn2IL2.png",n="/assets/de1fa62885bde2e571bcce4acab66f5c.f5_C3G0i.png",d="/assets/eccce3d616c70985b25f3ba3d849b747.6O4E4cqv.png",k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/工具/Charles代理Yapi.md","filePath":"docs/工具/Charles代理Yapi.md","lastUpdated":1702735041000}'),i={name:"docs/工具/Charles代理Yapi.md"},l=o('<p>在项目中使用 YAPI 的 mock 接口会跨域，需要使用 Charles 进行代理。<br>比如YAPI接口的地址是 <a href="https://yapi.corp.qunar.com/mock/9661" target="_blank" rel="noreferrer">https://yapi.corp.qunar.com/mock/96</a><a href="http://wiki.corp.qunar.com/" target="_blank" rel="noreferrer">61</a> ，项目的地址是 <a href="https://talent.qunar.com/" target="_blank" rel="noreferrer">https://talent.qunar.com</a></p><h3 id="打开-charles-选择-tools-rewrite-settings" tabindex="-1">打开 Charles，选择 tools &gt;&gt; Rewrite Settings <a class="header-anchor" href="#打开-charles-选择-tools-rewrite-settings" aria-label="Permalink to &quot;打开 Charles，选择 tools &gt;&gt; Rewrite Settings&quot;">​</a></h3><h3 id="" tabindex="-1"><img src="'+r+'" alt="image.png"> <a class="header-anchor" href="#" aria-label="Permalink to &quot;![image.png](../../images/ed954a38b3b89a3b2d9e276110d98718.png)&quot;">​</a></h3><h3 id="点击add添加规则" tabindex="-1">点击add添加规则 <a class="header-anchor" href="#点击add添加规则" aria-label="Permalink to &quot;点击add添加规则&quot;">​</a></h3><p><img src="'+s+'" alt="image.png"></p><h3 id="配置拦截url格式" tabindex="-1">配置拦截URL格式 <a class="header-anchor" href="#配置拦截url格式" aria-label="Permalink to &quot;配置拦截URL格式&quot;">​</a></h3><p><img src="'+c+'" alt="image.png"></p><h3 id="开启ssl代理并设置" tabindex="-1">开启SSL代理并设置 <a class="header-anchor" href="#开启ssl代理并设置" aria-label="Permalink to &quot;开启SSL代理并设置&quot;">​</a></h3><p><img src="'+n+'" alt="image.png"><br><img src="'+d+'" alt="image.png"></p><h3 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h3><p>按照上述步骤配置好后，本机发出的<code>https://talent.qunar.com/mock</code>前缀的请求会被Charles拦截，实际访问的是<code>[https://yapi.corp.qunar.com/mock/96](https://yapi.corp.qunar.com/mock/9661)[61](http://wiki.corp.qunar.com/) </code>前缀的链接。<br>例：请求接口<code>[https://talent.qunar.com/mock](https://talent.qunar.com/mock)/herqa/job/getItemsInBounds</code>，通过Charles处理后实际访问的是<code>https://yapi.corp.qunar.com/mock/9661/herqa/job/getItemsInBounds</code>。</p><blockquote><p>注： 实际数据接口为<code>https://talent.qunar.com/herqa/job/getItemsInBounds</code>，中间是没有<code>mock</code>字样的，所以可以定义常量BASE_URL：<code>const BASE_URL = &quot;https://talent.qunar.com/mock&quot;</code>，在请求数据的时候进行拼接，如：<code>url: BASE_URL + &#39;/herqa/job/getItemsInBounds&#39;</code>，这样在测试完成，接口上线服务后，只需要将BASE_URL里的mock去掉即可：<code>const BASE_URL = &quot;https://talent.qunar.com&quot;</code></p></blockquote>',12),p=[l];function h(m,_,u,b,g,q){return e(),t("div",null,p)}const S=a(i,[["render",h]]);export{k as __pageData,S as default};
