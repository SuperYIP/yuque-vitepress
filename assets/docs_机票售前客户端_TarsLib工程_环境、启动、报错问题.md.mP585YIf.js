import{_ as s,a as i}from"./chunks/98444704175cb7aeaf079eca0553333f.W2LjZit_.js";import{_ as a}from"./chunks/a5e169d013d40a8b03ceb9c40226be3c.sEA9e4Ei.js";import{_ as t,c as n,o as e,U as h}from"./chunks/framework.fNqm3e01.js";const p="/assets/354a93c127e89fb09749716308039d18.JXeDS4RK.png",l="/assets/15ba426408308df5f4382d3178ae4816.Kl3pYslK.png",_=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/机票售前客户端/TarsLib工程/环境、启动、报错问题.md","filePath":"docs/机票售前客户端/TarsLib工程/环境、启动、报错问题.md","lastUpdated":1704357645000}'),r={name:"docs/机票售前客户端/TarsLib工程/环境、启动、报错问题.md"},k=h('<blockquote><p>wiki: <a href="https://wiki.corp.qunar.com/confluence/pages/viewpage.action?pageId=524620407" target="_blank" rel="noreferrer">https://wiki.corp.qunar.com/confluence/pages/viewpage.action?pageId=524620407</a><a href="https://wiki.corp.qunar.com/confluence/pages/viewpage.action?pageId=520521042" target="_blank" rel="noreferrer">https://wiki.corp.qunar.com/confluence/pages/viewpage.action?pageId=520521042</a></p></blockquote><h3 id="安装依赖-python版本需求-3-9" tabindex="-1">安装依赖：python版本需求：3.9 <a class="header-anchor" href="#安装依赖-python版本需求-3-9" aria-label="Permalink to &quot;安装依赖：python版本需求：3.9&quot;">​</a></h3><blockquote><p>安装依赖的命令：sudo python3.9 -m pip install -r requirements.txt -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noreferrer">https://pypi.tuna.tsinghua.edu.cn/simple</a></p></blockquote><p>自己的python版本本来是3.11，安装依赖时安装<code>Pillow~=8.3.2</code>失败，但是不指定<code>Pillow</code>版本(默认安装10.x版本)可以安装成功。在此过程中尝试了卸载和安装其他版本的python，学习了homebrew工具的使用，<strong>通过brew install和brew uninstall可以很方便的管理mac中的第三方工具。</strong><br>使用python3.11启动服务(master_server.py文件)时，启动失败，报错：<code>&#39;not&#39; is not a valid parameter name</code>，此问题最终没能解决，询问宇哥，果断更换为python3.9版本，与其开发时用的python版本保持一致。</p><blockquote><p>下次再跑项目的时候，要提前看看项目的环境要求，尽量和项目开始时保持一致，减少配环境过程中花费的时间。</p></blockquote><h4 id="后来学了虚拟环境-可以将项目依赖安装在虚拟环境中" tabindex="-1">后来学了虚拟环境，可以将项目依赖安装在虚拟环境中 <a class="header-anchor" href="#后来学了虚拟环境-可以将项目依赖安装在虚拟环境中" aria-label="Permalink to &quot;后来学了虚拟环境，可以将项目依赖安装在虚拟环境中&quot;">​</a></h4><p>遇到问题：requirements.txt中有几个依赖是以可编辑的方式安装的。安装这几个包需要sudo权限，但是虚拟环境中使用sudo权限会提示找不到pip。所以目前解决方式通过<code>pyenv global TARS</code>命令将全局pip指定为和虚拟环境一致，这样就会安装到虚拟环境中了。</p><h3 id="安装tkinter库-brew-install-python-tk-3-9" tabindex="-1">安装tkinter库：brew install python-tk@3.9 <a class="header-anchor" href="#安装tkinter库-brew-install-python-tk-3-9" aria-label="Permalink to &quot;安装tkinter库：brew install python-tk@3.9&quot;">​</a></h3><p>通过步骤1将python版本更换为python3.9并根据提示安装<code>tkinter</code>库后，运行<code>master_server.py</code>文件启动服务时仍然报错：RuntimeError: Directory &#39;archive&#39; does not exist。这个报错其实可以读懂，原因是找不到archive文件，也定位到了报错的文件位置：route.py最后一行：<code>app.mount(path=&#39;/static&#39;, app=StaticFiles(directory=&quot;archive&quot;), name=&#39;static&#39;)</code>。但是还是没能自己独立解决，主要是不确定这行代码的作用。询问纯志哥后把这行代码注释掉了，问题解决。</p><h3 id="解决运行master-server-py文件启动服务时报错的问题" tabindex="-1">解决运行<code>master_server.py</code>文件启动服务时报错的问题 <a class="header-anchor" href="#解决运行master-server-py文件启动服务时报错的问题" aria-label="Permalink to &quot;解决运行`master_server.py`文件启动服务时报错的问题&quot;">​</a></h3><p>这个报错主要包含两个方面的问题：<br>第一是电脑中默认的python环境是python3.11，虽然我在运行master_server.py文件时指定了以python3.9运行，但是在调用site-packages里的第三方库时，调的仍然是python3.11的。**解决方式是在vscode设置中修改默认使用的python版本为python3.9（通过 **<code>**which python3.9**</code><strong>命令可以看到python3.9的路径）</strong>。(此时通过vscode运行按钮执行python程序使用的就是python3.9了，但是在命令行中运行python程序时，默认仍然是python3.11)<br><img src="'+s+`" alt="image.png"><br>第二是我运行master_server.py程序时是在MasterServer路径下执行的python命令，而报错的代码：<code>app.mount(path=&#39;/static&#39;, app=StaticFiles(directory=&quot;archive&quot;), name=&#39;static&#39;)</code>，是在当前文件路径中寻找archive文件夹的，archive文件夹是建在MasterServer文件夹的父路径的，所以一直报错找不到archive文件夹。在MasterServer文件夹的父路径TarsLib路径下执行：<code>python3.9 MasterServer/master_server.py</code>启动服务，问题解决。</p><h3 id="编写服务启动脚本-启动master-server-py文件" tabindex="-1">编写服务启动脚本：启动master_server.py文件 <a class="header-anchor" href="#编写服务启动脚本-启动master-server-py文件" aria-label="Permalink to &quot;编写服务启动脚本：启动master_server.py文件&quot;">​</a></h3><p>在TarsLib工程根目录下创建.vscode文件夹，在.vscode文件夹中创建launch.json文件，写入如下代码：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    //</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Use IntelliSense to learn about possible attributes.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    //</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Hover to view descriptions of existing attributes.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    //</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> For more information, visit: https:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">go.microsoft.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fwlink</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">linkid=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">830387</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.2.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;configurations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Python: 当前文件&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;python&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;request&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;launch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;program&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/Users/qitmac001378/Desktop/TarsLib/MasterServer/master_server.py&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;integratedTerminal&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Python: Master&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;python&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;request&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;launch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;program&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/Users/qitmac001378/Desktop/TarsLib/MasterServer/master_server.py&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;integratedTerminal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;test&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> //</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 可选择启动方式：[prod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> test </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> local]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Python: Slaver&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;python&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;request&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;launch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;program&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/Users/qitmac001378/Desktop/TarsLib/MasterServer/master_server.py&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;integratedTerminal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;args&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &quot;test&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>脚本中program字段指定了master_server.py文件的绝对路径，宇哥他们基本都是用这个脚本启动服务，所以没有遇到我在命令行启动时的找不到archive文件夹的问题。</p></blockquote><blockquote><p>注：&quot;args&quot;: [&quot;test&quot;] // 可选择启动方式：[prod / test / local]，改变args的值后，接口的url会改变，需要在前端项目<code>tars-management-system</code>中做相应修改：src -&gt; service -&gt; utils -&gt; fetchHelper.js文件中修改<code>commonUrl</code>变量的值。 <img src="`+a+`" alt="image.png"></p></blockquote><h3 id="本地开发时最好关闭设备轮询" tabindex="-1">本地开发时最好关闭设备轮询 <a class="header-anchor" href="#本地开发时最好关闭设备轮询" aria-label="Permalink to &quot;本地开发时最好关闭设备轮询&quot;">​</a></h3><p><code>master_server.py</code>文件最后一部分，第255行注释掉。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 线上环境，只允许124主机调度</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;a905&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __file__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 开启设备轮询</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # threading.Thread(target=device_poll_start).start()	// 本地开发时注释掉这一行</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 执行服务启动后的初始化动作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    threading.Thread(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">actions_after_server_started).start()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 执行服务启动:初始化主流程回溯动作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    threading.Thread(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">actions_after_interaction_server_started).start()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 执行服务启动:初始化保险回溯动作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    run_env </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.getenv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;run_env&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> run_env </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;prod&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 生产环境拉取保险回溯</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        threading.Thread(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">actions_after_insure_server_started).start()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 开启定时任务 获取T-1天的项目发布历史</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    scheduler.start()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uvicorn.run(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">app</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">            host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HOST_IP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">            port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MASTER_PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">            workers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="重启服务" tabindex="-1">重启服务 <a class="header-anchor" href="#重启服务" aria-label="Permalink to &quot;重启服务&quot;">​</a></h3><h4 id="a-将本地写好的代码和入master分支" tabindex="-1">a. 将本地写好的代码和入master分支 <a class="header-anchor" href="#a-将本地写好的代码和入master分支" aria-label="Permalink to &quot;a. 将本地写好的代码和入master分支&quot;">​</a></h4><h4 id="b-在tars界面一键部署-相当于拉取master分支代码到各个服务器" tabindex="-1">b. 在Tars界面一键部署（相当于拉取master分支代码到各个服务器） <a class="header-anchor" href="#b-在tars界面一键部署-相当于拉取master分支代码到各个服务器" aria-label="Permalink to &quot;b. 在Tars界面一键部署（相当于拉取master分支代码到各个服务器）&quot;">​</a></h4><p><img src="`+i+'" alt="image.png"></p><h4 id="c-登录主服务器-重启服务" tabindex="-1">c. 登录主服务器，重启服务 <a class="header-anchor" href="#c-登录主服务器-重启服务" aria-label="Permalink to &quot;c. 登录主服务器，重启服务&quot;">​</a></h4><blockquote><p>重启服务前，需要在Tars平台 -&gt; 任务管理 -&gt; 手动任务、项目任务、定时任务中<strong>确定没有正在执行的任务</strong>。</p></blockquote><p>执行：<code>cd Desktop/Tars/TarsLib/script/ansible</code>进入文件夹<br>执行：<code>ansible-playbook restartServer.yml</code>重启服务</p><h3 id="查看日志和程序中的print-输出" tabindex="-1">查看日志和程序中的print()输出 <a class="header-anchor" href="#查看日志和程序中的print-输出" aria-label="Permalink to &quot;查看日志和程序中的print()输出&quot;">​</a></h3><blockquote><p>tail -f 日志文件</p></blockquote><h4 id="查看主服务器日志" tabindex="-1">查看主服务器日志： <a class="header-anchor" href="#查看主服务器日志" aria-label="Permalink to &quot;查看主服务器日志：&quot;">​</a></h4><p>在主服务器终端执行：<code>tail -f /Users/a905/Desktop/Tars/TarsLib/archive/master_server.log</code></p><h4 id="查看从服务器日志" tabindex="-1">查看从服务器日志： <a class="header-anchor" href="#查看从服务器日志" aria-label="Permalink to &quot;查看从服务器日志：&quot;">​</a></h4><p>在从服务器终端执行：<code>tail -f /Users/qitnac000392/Desktop/Tars/TarsLib/archive/slave_server.log</code><br><strong>注：从服务器有3台，所以在不同从服务器中查看日志，需要修改</strong><code>qitnac000392</code><strong>部分为对应的电脑用户名。</strong><br><strong>推荐在命令行中输入：tail -f后，找到slave_server.log文件，拖到命令行中，即可自动得到此文件路径。</strong></p><h2 id="报错" tabindex="-1">报错 <a class="header-anchor" href="#报错" aria-label="Permalink to &quot;报错&quot;">​</a></h2><h3 id="项目打包页卡住-pmo信息不出来" tabindex="-1">项目打包页卡住，PMO信息不出来 <a class="header-anchor" href="#项目打包页卡住-pmo信息不出来" aria-label="Permalink to &quot;项目打包页卡住，PMO信息不出来&quot;">​</a></h3><p><img src="'+p+'" alt="image.png"></p><blockquote><p>参考： <a href="https://zhuanlan.zhihu.com/p/618541354" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/618541354</a><a href="https://blog.csdn.net/wade1010/article/details/105417098" target="_blank" rel="noreferrer">https://blog.csdn.net/wade1010/article/details/105417098</a><a href="https://blog.csdn.net/wyyang2/article/details/110622734" target="_blank" rel="noreferrer">https://blog.csdn.net/wyyang2/article/details/110622734</a></p></blockquote><p>查看句柄数：<code>ulimit -a</code><br>解决：主服务中执行：<code>ulimit -S -n 20496</code>，增大文件句柄数。<br><img src="'+l+'" alt="image.png"></p>',37),o=[k];function E(d,c,g,y,u,F){return e(),n("div",null,o)}const v=t(r,[["render",E]]);export{_ as __pageData,v as default};
